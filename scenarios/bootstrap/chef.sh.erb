# Make Swapfile
fallocate -l 2G /swapfile
chmod 600 /swapfile
mkswap /swapfile
swapon /swapfile

# Put chef stuff in place
mkdir -p /root/chef/cookbooks/op/recipes
cd /root/chef

# /root/chef/solo.rb
cat << EOF > solo.rb
root = File.absolute_path(File.dirname(__FILE__))

file_cache_path root
cookbook_path root + '/cookbooks'
EOF

# /root/chef/solo.json
cat << EOF > solo.json
{
  "run_list": [ "recipe[op::default]"]
}
EOF

# check for cheff error and write to s3 file if found
cat << EOF > /root/chef/cheferror.rb
require 'net/http'

body = if File.exists? "/root/chef/chef-stacktrace.out"
  "error\n" + File.read("/root/chef/chef-stacktrace.out")
else
  "finished"
end

put = Net::HTTP::Put.new('<%= instance.com_page %>', 'content-type' => 'text/plain')
put.body = body

# send the PUT request
http = Net::HTTP.new('<%= Rails.configuration.x.aws['s3_bucket_name'] %>.<%= Rails.configuration.x.aws[Rails.configuration.x.aws['region']]['s3_endpoint'] %>', 443)
http.use_ssl = true
http.start
resp = http.request(put)
resp = [resp.code.to_i, resp.to_hash, resp.body]
http.finish
EOF

apt-get -y install ruby

wget -O /root/chef/cookbooks/op/recipes/default.rb '<%= instance.cookbook_url %>'
chef-solo -c solo.rb -j solo.json

ruby /root/chef/cheferror.rb

echo "finished - CLOUD INIT"
