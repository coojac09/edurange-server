.panel-body
  = form_tag '', method: :get, class: 'form-inline filter-controls' do
    = hidden_field_tag 'scenario_id', @query.scenario_id
    - if @query.player_options
      %div.form-group
        = label_tag 'player_login', 'Player', class: 'control-label'
        = select_tag 'player_login', options_from_collection_for_select(@query.player_options, :login, :login, selected: params[:player_login]), include_blank: 'All', class: 'form-control'
    - if @query.instance_options
      %div.form-group
        = label_tag 'instance_id', 'Instance', class: 'control-label'
        = select_tag 'instance_id', options_from_collection_for_select(@query.instance_options, :id, :name, selected: params[:instance_id]), include_blank: 'All', class: 'form-control'
    %div.pull-right
      %button{name: 'commit', type: 'submit', class: 'btn btn-primary'}
        = render 'icon', name: 'filter'
        Filter
      = link_to(commands_path(filter_params.slice(:scenario_id, :player_login, :instance_name).merge(format: :csv)), type: 'text/csv', download: 'commands.csv', class: 'btn btn-primary') do
        = render 'icon', name: 'save-file'
        Export
.panel-body
  = form_tag '', method: :get, class: 'form-inline filter-controls' do
    %div.form-group
      = label_tag 'player_login', 'Show Repeated Attempts', class: 'control-label'
      -# FILTER COMMANDS HERE. This line is currently querying database for each player attached to this scenario instance.
      -# It needs to show a drop down of Milestones specific to this scenario.
      -# When a milestone is selected, command table will be filtered to show commands associated with that milestone that were attempted but not completed.
      = select_tag 'player_login', options_from_collection_for_select(@query.player_options, :login, :login, selected: params[:player_login]), include_blank: 'All', class: 'form-control'
    %div.form-group
      = label_tag 'player_login', 'Show Uncompleted Milestones', class: 'control-label'
      -# FILTER COMMANDS HERE. This line is currently querying database for each player attached to this scenario instance.
      -# It needs to show a drop down of Milestones specific to this scenario.
      -# When a milestone is selected, command table will be filtered to show commands associated with that milestone that were never completed.
      = select_tag 'player_login', options_from_collection_for_select(@query.player_options, :login, :login, selected: params[:player_login]), include_blank: 'All', class: 'form-control'

%table.table
  %thead
    %tr
      %th Time
      %th Scenario
      %th Instance
      %th CWD
      %th Player
      %th Status
      %th Command
      %th Output
  %tbody
    - if @commands.empty?
      %tr.no-data
        %td{colspan: 6} No Records
    - else
      - @commands.each do |record|
        %tr
          %td= record.performed_at
          %td= link_to(record.scenario.name, scenario_path(record.scenario))
          %td= record.instance.name
          %td= record.cwd
          %td= record.player.login
          %td{class: record.exit_status == 0 || record.exit_status.nil? ? 'text-muted' : 'danger'}= record.exit_status
          %td= record.command
          %td= record.output
.panel-footer
  = raw pagy_bootstrap_nav(@pagy)
